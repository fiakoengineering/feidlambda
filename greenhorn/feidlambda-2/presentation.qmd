---
title: |
  Greenhorn:<br>feidlambda II
subtitle: |
  _**Exploring Dynamic Array + User Defined `Lambda` (UDL)**_
date: |
  _`v1.0: 25 Oktober 2022`_<br>
  [_`v2.0: 28 Oktober 2022`_]
author: |
  Taruma Sakti Megariansyah (**fiako**dev)
format:
  revealjs: 
    smaller: false
    scrollable: true
    slide-tone: false
    slide-number: true
    preview-links: true
    theme: sky
      # [dark] >-> night > moon > dark
      # [light] >-> default > serif (formal) > simple (code-like) > sky (code | thin)
    logo: /fiakologo.png
    transition: convex
    embed-resources: false #TODO
    touch: true
    controls: true
    incremental: true
    # multiplex: true
    footer: |
      [Edit this presentation](https://github.com/fiakoenjiniring/feidlambda/edit/main/greenhorn/feidlambda-2/presentation.qmd){target="_blank" preview-link="false"} | [Report an issue](https://github.com/fiakoenjiniring/feidlambda/issues/new){target="_blank" preview-link="false"}
---

## feidlambda II {.smaller}

**Kegiatan**

Greenhorn

**Topik**

_Exploring Dynamic Array and User Defined `Lambda` (UDL)_<br>Memanfaatkan _Dynamic Array_ dan _User-Defined `LAMBDA` (UDL)_

**_Author_**

Bahan presentasi dibuat oleh **Taruma Sakti Megariansyah**

**Lisensi**

Seluruh materi presentasi menggunakan lisensi [CC-BY-NC-SA 4.0](http://creativecommons.org/licenses/by-nc-sa/4.0/){target="_blank" preview-link="false"}

## Agenda

Agenda untuk _Greenhorn feidlambda II: Exploring Dynamic Array + User Defined `Lambda` (UDL)_

- Review Daftar Istilah
- Eksplorasi tentang _Logical_
- _Dynamic Array Formula_ (DAF)
- Fungsi Baru dari Excel 2019 dan 2021
- _User Defined `Lambda`_ (UDL)

# 1 Review [Daftar Istilah](https://lambda.fiako.engineering/docs/glossary.html)

# 2 Eksplorasi tentang _Logical_

Eksplorasi mengenai fungsi yang menghasilkan _logical_ yaitu `TRUE` atau `FALSE`.

# Fungsi _Logical_

`NOT(...)`, `AND(...)`, `OR(...)`, `XOR(...)`

# Fungsi `NOT(...)`

## `NOT` (1)

. . .

### Syntax

```vb 
=NOT(logical)
```

- Fungsi `NOT` membalikkan nilai argumennya. ^[[`NOT` (Fungsi `NOT`)](https://support.microsoft.com/id-id/office/not-fungsi-not-9cfc6011-a054-40c7-a140-cd4ba2d87d77), Microsoft Support.]
- Menghasilkan nilai `TRUE` ketika kondisi bernilai `FALSE`, dan berlaku sebaliknya. 
- `NOT(TRUE)` $\Rightarrow$ `FALSE`
- `NOT(FALSE)` $\Rightarrow$ `TRUE`

## `NOT` (2) {.smaller}

. . .

$$
\mathbf{vector} \Leftrightarrow \mathbf{x} \leftarrow 
\begin{bmatrix}
  \texttt{TRUE} & \texttt{TRUE} & \texttt{FALSE}
\end{bmatrix}
$$

- `NOT(vector)`<br> 
  $\Rightarrow$ `NOT({TRUE, TRUE, FALSE})`<br> 
  $\Rightarrow$ `{FALSE, FALSE, TRUE}`
- `NOT(TRANSPOSE(vector))`<br> 
  $\Rightarrow$ `NOT({TRUE; TRUE; FALSE})`<br> 
  $\Rightarrow$ `{FALSE; FALSE; TRUE}`
- Jika input berupa _logical array_ saja (`NOT(logical_vector)`), maka akan mengevaluasi seluruh elemen pada _logical array_ (`AND(elemen_1, elemen_2, ...)`). 

# Fungsi `AND(...)`

## `AND` (1)

. . .

### Syntax

```vb 
=AND(logical1, [logical2], ...)
```

- Fungsi logika, untuk menentukan apakah **semua kondisi** dalam sebuah tes adalah `TRUE`. ^[[AND (Fungsi AND)](https://support.microsoft.com/id-id/office/and-fungsi-and-5f19b2e8-e1df-4408-897a-ce285a19e9d9), Microsoft Support.]
- Menghasilkan nilai `TRUE` ketika seluruh kondisi bernilai `TRUE`. Jika terdapat **satu atau lebih** bernilai `FALSE` maka menghasilkan nilai `FALSE`. 

## `AND` (2) {.smaller}

. . .

### Contoh

- `AND(TRUE, TRUE) | AND(TRUE, TRUE, TRUE)` $\Rightarrow$ `TRUE`
- `AND(TRUE, FALSE) | AND(TRUE, FALSE, FALSE)` $\Rightarrow$ `FALSE`
- `AND(FALSE, FALSE) | AND(FALSE, FALSE, FALSE)` $\Rightarrow$ `FALSE`

. . .

$$
\mathbf{vector} \Leftrightarrow \mathbf{x} \leftarrow 
\begin{bmatrix}
  \texttt{TRUE} & \texttt{TRUE} & \texttt{FALSE}
\end{bmatrix}
$$

- `AND(vector)` $\Rightarrow$ `AND(TRUE, TRUE, FALSE)` $\Rightarrow$ `FALSE`
- Jika input berupa _logical array_ saja (`AND(logical_vector)`), maka akan mengevaluasi seluruh elemen pada _logical array_ (`AND(elemen_1, elemen_2, ...)`). 

# Fungsi `OR(...)`

## `OR` (1)

. . .

### Syntax

```vb 
=OR(logical1, [logical2], ...)
```

- Fungsi logika, untuk menentukan apakah **salah satu kondisi** dalam sebuah tes adalah `TRUE`. ^[[`OR` function](https://support.microsoft.com/en-us/office/or-function-7d17ad14-8700-4281-b308-00b131e22af0), Microsoft Support.]
- Menghasilkan nilai `TRUE` ketika salah satu kondisi bernilai `TRUE`. 

## `OR` (2) {.smaller}

. . .

### Contoh

- `OR(TRUE, TRUE) | OR(TRUE, TRUE, TRUE)` $\Rightarrow$ `TRUE`
- `OR(TRUE, FALSE) | OR(TRUE, FALSE, FALSE)` $\Rightarrow$ `TRUE`
- `OR(FALSE, FALSE) | OR(FALSE, FALSE, FALSE)` $\Rightarrow$ `FALSE`

. . .

$$
\mathbf{vector} \Leftrightarrow \mathbf{x} \leftarrow 
\begin{bmatrix}
  \texttt{TRUE} & \texttt{TRUE} & \texttt{FALSE}
\end{bmatrix}
$$

- `OR(vector)` $\Rightarrow$ `OR(TRUE, TRUE, FALSE)` $\Rightarrow$ `TRUE`
- Jika input berupa _logical array_ saja (`OR(logical_array)`), maka akan mengevaluasi seluruh elemen pada _logical array_ (`OR(elemen_1, elemen_2, ...)`). 

# Fungsi `XOR(...)`

## `XOR` (1)

. . .

### Syntax

```vb 
=XOR(logical1, [logical2], ...)
```

- Fungsi `XOR` mengembalikan logika **Exclusive Or** dari semua argumen. ^[[`XOR` function](https://support.microsoft.com/id-id/office/xor-fungsi-xor-1548d4c2-5e47-4f77-9a92-0533bba14f37), Microsoft Support.]
- Menghasilkan nilai `TRUE` ketika hanya satu kondisi bernilai `TRUE`. 

## `XOR` (2) {.smaller}

. . .

### Contoh

- `XOR(TRUE, TRUE) | OR(TRUE, TRUE, TRUE)` $\Rightarrow$ `FALSE`
- `XOR(TRUE, FALSE) | OR(TRUE, FALSE, FALSE)` $\Rightarrow$ `TRUE`
- `XOR(TRUE, FALSE, TRUE)` $\Rightarrow$ `FALSE`
- `XOR(FALSE, FALSE) | OR(FALSE, FALSE, FALSE)` $\Rightarrow$ `FALSE`

. . .

$$
\mathbf{vector} \Leftrightarrow \mathbf{x} \leftarrow 
\begin{bmatrix}
  \texttt{TRUE} & \texttt{TRUE} & \texttt{FALSE}
\end{bmatrix}
$$

- `XOR(vector)` $\Rightarrow$ `XOR(TRUE, TRUE, FALSE)` $\Rightarrow$ `FALSE`
- Jika input berupa _logical array_ saja (`XOR(logical_array)`), maka akan mengevaluasi seluruh elemen pada _logical array_ (`XOR(elemen_1, elemen_2, ...)`). 

# _Logical_ $\iff$ _Number_

## _Logical_ $\Rightarrow$ _Number_ (1)

- `FALSE` $\Rightarrow$ `0`. Bernilai `FALSE` jika nilai `0`. $\{ x = 0 \}$
- `TRUE` $\neq$ `0`. Bernilai `TRUE` jika nilai **bukan** `0`. $\{ x \in \mathbf{R}\ |\ x \neq 0 \}$

- Mengubah _logical_ menjadi _number_ dapat menggunakan fungsi `INT(...)`.
- `INT(TRUE)` $\Rightarrow$ `1`.
- `INT(FALSE)` $\Rightarrow$ `0`.
 
## _Logical_ $\Rightarrow$ _Number_ (2)

- Fungsi `INT(...)` merupakan _Dynamic Array Formula_, sehingga jika _input_ berupa _array_ akan dievaluasi setiap elemennya.
- `INT({TRUE, FALSE, FALSE, TRUE})` $\Rightarrow$ `{1, 0, 0, 1}`. 

## _Logical_ dan operator aritmatika (1) {.smaller}

- _Logical array_ akan diubah menjadi _numeric array_ ketika bertemu operator aritmatika (`+`, `*`, `-`, `/`).
- Perubahan _logical_ menjadi _number_ sama dengan proses penggunaan fungsi `INT(...)`.
- Operator aritmatika perkalian (`*` / $\times$) dan penambahan (`+`) dapat berperilaku seperti fungsi _logical_ `AND` (`*`) dan `OR` (`+`). 
- Umumnya operator perkalian setiap elemen dalam suatu vector atau matriks (_array_) menggunakan simbol $\odot$. Akan tetapi, pada materi ini simbol $\times$ diartikan sebagai perkalian setiap elemen (_element-wise_) dan **bukan perkalian matriks**.

## _Logical_ dan operator aritmatika (2) {.smaller}

. . .

$$
\mathbf{X}\underbrace{\textsf{ operator }}_{\times\ |\ +}\mathbf{Y}
$$

$$
\{
  \mathbf{X} \in \{\texttt{TRUE}, \texttt{FALSE}\}, \mathbf{Y} \in \{\texttt{TRUE}, \texttt{FALSE}\} 
\} 
$$

. . .

$$
\overbrace{
  \begin{bmatrix}
  \texttt{TRUE}\\
  \texttt{FALSE}\\
  \texttt{FALSE}
  \end{bmatrix}
}^{\text{logical array}}
\underbrace{\ \times\ |\ +\ }_\text{operator}
\overbrace{
  \begin{bmatrix}
  \texttt{TRUE}\\
  \texttt{TRUE}\\
  \texttt{FALSE}
  \end{bmatrix}
}^{\text{logical array}}
\Rightarrow
\overbrace{
  \begin{bmatrix}
  1\\
  0\\
  0
  \end{bmatrix}
}^{\text{numeric array}}
\underbrace{\ \times\ |\ +\ }_\text{operator}
\overbrace{
  \begin{bmatrix}
  1\\
  1\\
  0
  \end{bmatrix}
}^{\text{numeric array}}
$$

# Operator perkalian

## Operator perkalian `*` sebagai `AND` (1)

- Setiap nilai yang dikalikan dengan `0` akan bernilai `0`. 

. . .

$$
x \times 0 = 0,\ \{x \in \mathbf{R}\}
$$

- Setiap nilai yang dikalikan dengan `FALSE` akan bernilai `FALSE`. 

## Operator perkalian `*` sebagai `AND` (2)

. . .

$$
\begin{bmatrix}
  \texttt{TRUE}\\
  \texttt{FALSE}\\
  \texttt{FALSE}
\end{bmatrix}
\times
\begin{bmatrix}
  \texttt{TRUE}\\
  \texttt{TRUE}\\
  \texttt{FALSE}
\end{bmatrix}
\Rightarrow
\begin{bmatrix}
  1\\
  0\\
  0
\end{bmatrix}
\times
\begin{bmatrix}
  1\\
  1\\
  0
\end{bmatrix}
=
\underbrace{
\begin{bmatrix}
  1\\
  0\\
  0
\end{bmatrix}
}_{\text{hasil akhir}}
$$

. . .

$$
\Rightarrow
\begin{bmatrix}
  1\\
  0\\
  0
\end{bmatrix}
\neq 0 =
\begin{bmatrix}
  \texttt{TRUE}\\
  \texttt{FALSE}\\
  \texttt{FALSE}
\end{bmatrix}
$$


# Operator penambahan

## Operator penambahan `+` sebagai `OR` (1)

- Berlaku seperti penambahan pada umumnya.

. . .

$$
x + 0 = x
$$

$$
x + y = x + y
$$ 

- Setiap nilai yang **bukan `0`** bernilai `TRUE`. 

## Operator penambahan `+` sebagai `OR` (2)

. . .

$$
\begin{bmatrix}
  \texttt{TRUE}\\
  \texttt{FALSE}\\
  \texttt{FALSE}
\end{bmatrix}
+
\begin{bmatrix}
  \texttt{TRUE}\\
  \texttt{TRUE}\\
  \texttt{FALSE}
\end{bmatrix}
\Rightarrow
\begin{bmatrix}
  1\\
  0\\
  0
\end{bmatrix}
+
\begin{bmatrix}
  1\\
  1\\
  0
\end{bmatrix}
=
\underbrace{
\begin{bmatrix}
  2\\
  1\\
  0
\end{bmatrix}
}_{\text{hasil akhir}}
$$

. . .

$$
\Rightarrow
\begin{bmatrix}
  2\\
  1\\
  0
\end{bmatrix}
\neq 0 =
\begin{bmatrix}
  \texttt{TRUE}\\
  \texttt{TRUE}\\
  \texttt{FALSE}
\end{bmatrix}
$$

# _Number_ $\Rightarrow$ _Logical_

## _Number_ $\Rightarrow$ _Logical_ (1)

- _Numeric array_ dapat digunakan sebagai kondisi _logical_ **tunggal**. 
- Setiap _numeric array_ yang digunakan sebagai _conditional_ secara tidak langsung berubah menjadi _logical array_. 
- Perubahan tersebut sama saja jika membandingkan _array_ **tidak sama dengan `0`**. $(\mathbf{x}_{\text{number}} \neq 0 = \mathbf{x}_{\text{logical}})$

## _Number_ $\Rightarrow$ _Logical_ (2)

. . .

$$
  \underbrace{
    \begin{bmatrix}
      3\\
      -1\\
      0
    \end{bmatrix}
  }_{\textit{numeric array}}
  \neq 0
  \Rightarrow
  \underbrace{
    \begin{bmatrix}
      \texttt{TRUE}\\
      \texttt{TRUE}\\
      \texttt{FALSE}
    \end{bmatrix}
  }_{\textit{logical array}}
$$

- Sama saja dengan `=array<>0`.

## _Number_ $\Rightarrow$ _Logical_ (2) {.smaller}

. . .

$$
\texttt{IF}
\left(
  \underbrace{
    \begin{bmatrix}
      3\\
      -1\\
      0
    \end{bmatrix}
  }_{\textit{numeric vector}}
  ,
  \underbrace{\dots}_{\texttt{TRUE}}
  ,
  \underbrace{\dots}_{\texttt{FALSE}}
\right)
$$

. . .

$$
\texttt{IF}
\left(
  \underbrace{
    \begin{bmatrix}
      \texttt{TRUE}\\
      \texttt{TRUE}\\
      \texttt{FALSE}
    \end{bmatrix}
  }_{\textit{logical vector}}
  ,
  \underbrace{\dots}_{\texttt{TRUE}}
  ,
  \underbrace{\dots}_{\texttt{FALSE}}
\right)
$$

## Yang perlu diperhatikan {.smaller}

- Hasil dari _logical array_ bertemu dengan operator aritmatika **selalu _numeric array_**.

. . .

$$
\begin{bmatrix}
  \texttt{TRUE}\\
  \texttt{FALSE}\\
  \texttt{FALSE}
\end{bmatrix}
\times
\begin{bmatrix}
  \texttt{TRUE}\\
  \texttt{TRUE}\\
  \texttt{FALSE}
\end{bmatrix}
+
\begin{bmatrix}
  \texttt{FALSE}\\
  \texttt{TRUE}\\
  \texttt{TRUE}
\end{bmatrix}
\Rightarrow
\begin{bmatrix}
  1\\
  0\\
  0
\end{bmatrix}
\times
\begin{bmatrix}
  1\\
  1\\
  0
\end{bmatrix}
+
\begin{bmatrix}
  0\\
  1\\
  1
\end{bmatrix}
=
\begin{bmatrix}
  1\\
  1\\
  1
\end{bmatrix}
$$


- Jika _numeric array_ digunakan sebagai argumen _conditional_, maka akan dikonversikan menjadi _logical array_. 

# Mengenal Fungsi `IS*(...)`

Kumpulan fungsi logika untuk memvalidasi _input_. 

## Fungsi `IS*(...)`

. . .

### SYNTAX

```default
=IS*(value)
```

- Memeriksa nilai tertentu dan mengembalikan `TRUE` atau `FALSE` bergantung pada hasilnya. ^[[Fungsi IS](https://support.microsoft.com/id-id/office/fungsi-is-0f2d7971-6019-40a0-a171-f2d869135665), Microsoft Support.]
- Fungsi `IS*(...)` merupakan _Dynamic Array Formula_. 
- `ISBLANK(...)` bernilai `TRUE` jika sel kosong.
- `ISNUMBER(...)` bernilai `TRUE` jika sel berisikan angka.

# Koleksi Fungsi `IS*`

## Periksa _error_ / kosong

- `ISNA(...)`: Cek nilai apakah `#N/A`.
- `ISERR(...)`: Cek nilai apakah error selain `#N/A` (`#VALUE!`, `#REF!`, `#DIV/0!`, `#NUM!`, `#NAME?`, atau `#NULL!`).
- `ISERROR(...)`: Cek nilai apakah error (seluruh jenis error).
- `ISBLANK(...)`: Cek nilai apakah kosong.

## Periksa jenis sel

- `ISLOGICAL(...)`: Cek nilai apakah _logical_ (`TRUE` atau `FALSE`).
- `ISNUMBER(...)`: Cek nilai apakah angka ($\mathbb{R}$).
- `ISTEXT(...)`: Cek nilai apakah teks. Dan `ISNONTEXT(...)`: Cek niai apakah bukan teks (_number_, _logical_, _error_)
- `ISFORMULA(...)`: Cek nilai apakah formula.

## Periksa jenis bilangan

- `ISEVEN(...)`: Cek nilai apakah bilangan genap.
- `ISODD(...)`: Cek nilai apakah bilangan ganjil.

# 3 _Dynamic Array Formula_ (DAF)

## Menyeleksi/memilih data (1)

- `FILTER(...)`: Fungsi `FILTER` memungkinkan Anda memfilter rentang data berdasarkan kriteria yang ditetapkan. ^[[Fungsi FILTER](https://support.microsoft.com/id-id/office/fungsi-filter-f4f7cb66-82eb-4767-8f7c-4877ad80c759), Microsoft Support.]

. . .

```default
=FILTER(array, include, [if_empty])
```

## Menyeleksi/memilih data (1)

- `UNIQUE(...)`: Fungsi `UNIQUE` menghasilkan daftar nilai yang unik dalam daftar atau rentang. ^[[Fungsi UNIQUE](https://support.microsoft.com/id-id/office/fungsi-unique-c5ab87fd-30a3-4ce9-9d1a-40204fb85e1e), Microsoft Support.]

. . .

```default
=UNIQUE(array, [by_col], [exactly_once])
```

## Membangkitkan data {.smaller}

::: {.incremental}
- `SEQUENCE(...)`: Fungsi `SEQUENCE` memungkinkan Anda menghasilkan daftar angka yang berurutan dalam larik seperti ${1, 2, 3, 4, \dots}$. ^[[Fungsi SEQUENCE](https://support.microsoft.com/id-id/office/fungsi-sequence-57467a98-57e0-4817-9f14-2eb78519ca90), Microsoft Support.]

```default
=SEQUENCE(rows, [columns], [start], [step])
```

- `RANDARRAY(...)`: Fungsi `RANDARRAY` menghasilkan larik angka acak. Anda dapat menentukan jumlah baris dan kolom yang akan diisi, nilai minimum dan maksimum, dan apakah fungsi mengembalikan bilangan bulat atau nilai desimal. ^[[Fungsi RANDARRAY](https://support.microsoft.com/id-id/office/randarray-fungsi-randarray-21261e55-3bec-4885-86a6-8b0a47fd4d33), Microsoft Support.]

```default
=RANDARRAY([rows], [columns], [min], [max], [whole_number])
```
:::

## Menyusun data

::: {.incremental}
- `SORT(...)`: Fungsi `SORT` mengurutkan konten rentang atau larik. ^[[Fungsi SORT](https://support.microsoft.com/id-id/office/fungsi-sort-22f63bd0-ccc8-492f-953d-c20e8e44b86c), Microsoft Support.]

```default
=SORT(array, [sort_index], [sort_order], [by_col])
```

- `SORTBY(...)`: Fungsi `SORTBY` mengurutkan konten rentang atau larik berdasarkan nilai dalam rentang atau larik yang terkait. ^[[Fungsi SORTBY](https://support.microsoft.com/id-id/office/fungsi-sortby-cd2d7a62-1b93-435c-b561-d6a35134f28f), Microsoft Support.]

```default
=SORTBY(array, by_array1, [sort_order1], [by_array2], [sort_order2], ...)
```
:::

## Mencari data {.smaller}

::: {.incremental}
- `XLOOKUP(...)`: Fungsi `XLOOKUP` mencari rentang atau array, lalu mengembalikan item yang terkait dengan kecocokan pertama yang ditemukannya. Jika tidak ada kecocokan, `XLOOKUP` dapat mengembalikan kecocokan terdekat (perkiraan). ^[[Fungsi XLOOKUP](https://support.microsoft.com/id-id/office/fungsi-xlookup-b7fd680e-6d10-43e6-84f9-88eae8bf5929), Microsoft Support.]

```default
=XLOOKUP(lookup_value, lookup_array, return_array, [if_not_found], [match_mode], [search_mode])
```

- `XMATCH(...)`: Fungsi `XMATCH` mengembalikan posisi relatif item dalam array atau rentang sel. ^[[Fungsi XMATCH](https://support.microsoft.com/id-id/office/fungsi-xmatch-d966da31-7a6b-4a13-a1c6-5a33ed6a0312), Microsoft Support.]

```default
=XMATCH(lookup_value, lookup_array, [match_mode], [search_mode])
```
:::

# 4 Fungsi Baru (2019-2021)

# Excel 2019

## Penggabungan Teks {.smaller}

::: {.incremental}
- `CONCAT(...)`: Fungsi `CONCAT` menggabungkan teks dari beberapa rentang dan/atau string, tetapi tidak menyediakan argumen pemisah atau IgnoreEmpty. ^[[Fungsi CONCAT](https://support.microsoft.com/id-id/office/concat-fungsi-concat-9b1a9a3f-94ff-41af-9736-694cbd6b4ca2), Microsoft Support.]

```default
=CONCAT(text1, [text2], ...)
```

- `TEXTJOIN(...)`: Fungsi `TEXTJOIN` menggabungkan teks dari beberapa rentang dan/atau string, serta menyertakan pemisah yang Anda tentukan antara tiap nilai teks yang akan digabungkan. Jika pemisah adalah string teks kosong, fungsi ini akan secara efektif menggabungkan rentang. ^[[Fungsi TEXTJOIN](https://support.microsoft.com/id-id/office/textjoin-fungsi-textjoin-357b449a-ec91-49d0-80c3-0e8fc845691c), Microsoft Support.]

```default
=TEXTJOIN(delimiter, ignore_empty, text1, [text2], ...)
```
:::

## KOLEKSI `IF*` {.smaller}

::: {.incremental}
- `IFS(...)`: Fungsi `IFS` memeriksa apakah satu atau beberapa kondisi terpenuhi dan mengembalikan nilai yang sesuai dengan kondisi `TRUE` pertama. `IFS` dapat menggantikan beberapa pernyataan `IF` yang bertumpuk, dan jauh lebih mudah dibaca dengan beberapa kondisi. ^[[Fungsi IFS](https://support.microsoft.com/id-id/office/ifs-fungsi-ifs-36329a26-37b2-467c-972b-4a39bd951d45), Microsoft Support.]

```default
=IFS(logical_test1, value_if_true1, [logical_test2, value_if_true2], [logical_test3, value_if_true3], ..., value_if_false)
```

- `MINIFS(...)` / `MAXIFS(...)`: Fungsi `MINIFS` mengembalikan nilai minimal di antara sel yang ditentukan oleh kumpulan persyaratan atau kriteria tertentu / Fungsi `MAXIFS` mengembalikan nilai maksimal di antara sel yang ditentukan oleh kumpulan persyaratan atau kriteria tertentu. ^[[Fungsi MINIFS](https://support.microsoft.com/id-id/office/minifs-fungsi-minifs-6ca1ddaa-079b-4e74-80cc-72eef32e6599), Microsoft Support.] ^[[Fungsi MAXIFS](https://support.microsoft.com/id-id/office/maxifs-fungsi-maxifs-dfd611e6-da2c-488a-919b-9b6376b28883), Microsoft Support.]

```default
=[MIN/MAX]IFS([min/max]_range, criteria_range1, criteria1, [criteria_range2, criteria2], ...)
```
:::

## SWITCH

- `SWITCH(...)`: Fungsi `SWITCH` mengevaluasi satu nilai (disebut ekspresi) terhadap daftar nilai, dan mengembalikan hasil yang terkait dengan nilai cocok pertama. Jika tidak terdapat kecocokan, nilai default opsional mungkin akan dikembalikan. ^[[Fungsi SWITCH](https://support.microsoft.com/id-id/office/switch-fungsi-switch-47ab33c0-28ce-4530-8a45-d532ec4aa25e), Microsoft Support.] 

```default
=SWITCH(expression, value1, result1, [default or value2, result2], ..., [default or value3, result3])
```

# EXCEL 2021

## LET

- `LET(...)`: Fungsi `LET` menetapkan nama ke hasil perhitungan. Ini memungkinkan menyimpan perhitungan menengah, nilai, atau menetapkan nama di dalam rumus. Nama ini hanya berlaku di dalam lingkup `LET` fungsi. Mirip dengan variabel dalam pemrograman, `LET` dilakukan melalui Excel rumus asli Anda. ^[[Fungsi LET](https://support.microsoft.com/id-id/office/fungsi-let-34842dd8-b92b-4d3f-b325-b8b8f9908999), Microsoft Support.] 

```default
=LET(name1, name_value1, calculation_or_name2, [name_value2, calculation_or_name2], ..., calculation)
```

# 5 _User Defined Lambda_ (UDL) dengan `LAMBDA`

## Mengenal LAMBDA dan UDL

- `LAMBDA(...)`: Gunakan fungsi `LAMBDA` untuk membuat fungsi kustom yang dapat digunakan kembali dan memanggilnya dengan nama yang mudah dikenali. Fungsi baru tersedia di seluruh buku kerja dan disebut seperti fungsi asli Excel. ^[[Fungsi LAMBDA](https://support.microsoft.com/id-id/office/fungsi-lambda-bd212d27-1cd1-4321-a34a-ccbf254b8b67), Microsoft Support.] 

```default
=LAMBDA(parameter1, [parameter2, parameter3, ...], calculation)
```

## `LAMBDA` dan `LET`

::: {.incremental}
- `LAMBDA` dan `LET` biasanya digunakan bersamaan untuk memudahkan pembuatan UDL ataupun membaca/_troubleshooting_.
- `LAMBDA` berfungsi menerima `input` dan membungkusnya sebagai fungsi baru di Excel. 
- `LET` digunakan untuk melakukan perhitungan/kalkulasi setelah menerima input dari `LAMBDA`. 
:::

## Menggabungkan `LAMBDA` dan `LET` {auto-animate="true"}

```r
=LAMBDA(parameter1, [parameter2, parameter3, ...], calculation)
```

## Menggabungkan `LAMBDA` dan `LET` {auto-animate="true"}

```{.r code-line-numbers="1,5|2-3|4"}
=LAMBDA(
  parameter1, 
  [parameter2, parameter3, ...],
  calculation
)
```

## Menggabungkan `LAMBDA` dan `LET` {auto-animate="true"}

```{.r code-line-numbers="1-3,9|4-8|2-3|4,8|5-6|7|"}
=LAMBDA(
  parameter1, 
  [parameter2, parameter3, ...],
  LET(
    name1, value1,
    [name2, value2, name3, value3, ...],
    calculation
  )
)
```

# Contoh `LAMBDA` dan `LET`

## Contoh `LAMBDA` dan `LET`

- Mengurangi setiap elemen dari _numeric vector_ ($\mathbf{x}$) dengan setengah dari rata-ratanya ($\frac{\text{mean}(\mathbf{x})}{2}$).
- $\mathbf{y} \leftarrow \mathbf{x} - \frac{\text{mean}(\mathbf{x})}{2}$

## Menentukan _input_ `LAMBDA` {auto-animate="true"}

$$ \mathbf{y} \leftarrow \mathbf{x} - \frac{\text{mean}(\mathbf{x})}{2} $$

```{.r code-line-numbers="|2-3"}
=LAMBDA(
  parameter1, 
  [parameter2, parameter3, ...],
  calculation
)
```

## Menentukan _input_ `LAMBDA` {auto-animate="true"}

$$ \mathbf{y} \leftarrow \mathbf{x} - \frac{\text{mean}(\mathbf{x})}{2} $$

```{.r code-line-numbers="2|3"}
=LAMBDA(
  vector,
  calculation
)
```

## Kalkulasi dengan `LET` {auto-animate="true"}

$$ \mathbf{y} \leftarrow \mathbf{x} - \frac{\text{mean}(\mathbf{x})}{2} $$

```{.r code-line-numbers="3-7"}
=LAMBDA(
  vector,
  LET(
    name1, value1,
    [name2, value2, name3, value3, ...],
    calculation
  )
)
```

## Kalkulasi dengan `LET` {auto-animate="true"}

$$ \mathbf{y} \leftarrow \mathbf{x} - \frac{\text{mean}(\mathbf{x})}{2} $$

```{.r code-line-numbers="4"}
=LAMBDA(
  vector,
  LET(
    x, vector,
    [name2, value2, name3, value3, ...],
    calculation
  )
)
```

## Kalkulasi dengan `LET` {auto-animate="true"}

$$ \mathbf{y} \leftarrow \mathbf{x} - \frac{\text{mean}(\mathbf{x})}{2} $$

```{.r code-line-numbers="4"}
=LAMBDA(
  vector,
  LET(
    ..., ...,
    [name2, value2, name3, value3, ...],
    calculation
  )
)
```

## Kalkulasi dengan `LET` {auto-animate="true"}

$$ \mathbf{y} \leftarrow \mathbf{x} - \frac{\text{mean}(\mathbf{x})}{2} $$

```{.r code-line-numbers="4"}
=LAMBDA(
  vector,
  LET(
    avg, AVERAGE(vector),
    [name2, value2, name3, value3, ...],
    calculation
  )
)
```

## Kalkulasi dengan `LET` {auto-animate="true"}

$$ \mathbf{y} \leftarrow \mathbf{x} - \frac{\text{mean}(\mathbf{x})}{2} $$

```{.r code-line-numbers="5"}
=LAMBDA(
  vector,
  LET(
    avg, AVERAGE(vector),
    halfavg, avg/2,
    ..., ...,
    calculation
  )
)
```

## Kalkulasi dengan `LET` {auto-animate="true"}

$$ \mathbf{y} \leftarrow \mathbf{x} - \frac{\text{mean}(\mathbf{x})}{2} $$

```{.r code-line-numbers="6"}
=LAMBDA(
  vector,
  LET(
    avg, AVERAGE(vector),
    halfavg, avg/2,
    y, vector - halfavg,
    calculation
  )
)
```

## Kalkulasi dengan `LET` {auto-animate="true"}

$$ \mathbf{y} \leftarrow \mathbf{x} - \frac{\text{mean}(\mathbf{x})}{2} $$

```{.r code-line-numbers="7-8"}
=LAMBDA(
  vector,
  LET(
    avg, AVERAGE(vector),
    halfavg, avg/2,
    y, vector - halfavg,
    y
  )
)
```

## Kalkulasi dengan `LET` {auto-animate="true"}

$$ \mathbf{y} \leftarrow \mathbf{x} - \frac{\text{mean}(\mathbf{x})}{2} $$

```{.r code-line-numbers="6"}
=LAMBDA(
  vector,
  LET(
    avg, AVERAGE(vector),
    halfavg, avg/2,
    vector - halfavg
  )
)
```

## Kalkulasi dengan `LET` {auto-animate="true"}

$$ \mathbf{y} \leftarrow \mathbf{x} - \frac{\text{mean}(\mathbf{x})}{2} $$

```{.r}
=LAMBDA(
  vector,
  LET(
    avg, AVERAGE(vector),
    halfavg, avg/2,
    vector - halfavg
  )
)
```

# Pengembangan lebih lanjut

## Validasi _input_ {auto-animate="true"}

$$ \mathbf{y} \leftarrow \mathbf{x} - \frac{\text{mean}(\mathbf{x})}{2} $$

```{.r code-line-numbers="2"}
=LAMBDA(
  vector,
  LET(
    avg, AVERAGE(vector),
    halfavg, avg/2,
    vector - halfavg
  )
)
```

## Validasi _input_ {auto-animate="true"}

$$ \mathbf{y} \leftarrow \mathbf{x} - \frac{\text{mean}(\mathbf{x})}{2} $$

```{.r code-line-numbers="2|4-5"}
=LAMBDA(
  vector,
  LET(
    vector_clean, FILTER(vector, ISNUMBER(vector)),
    avg, AVERAGE(vector_clean),
    halfavg, avg/2,
    vector - halfavg
  )
)
```

## _Refactoring_ {auto-animate="true"}

$$ \mathbf{y} \leftarrow \mathbf{x} - \frac{\text{mean}(\mathbf{x})}{2} $$

```{.r code-line-numbers="5-6"}
=LAMBDA(
  vector,
  LET(
    vector_clean, FILTER(vector, ISNUMBER(vector)),
    avg, AVERAGE(vector_clean),
    halfavg, avg/2,
    vector - halfavg
  )
)
```

## _Refactoring_ {auto-animate="true"}

$$ \mathbf{y} \leftarrow \mathbf{x} - \frac{\text{mean}(\mathbf{x})}{2} $$

```{.r code-line-numbers="5"}
=LAMBDA(
  vector,
  LET(
    vector_clean, FILTER(vector, ISNUMBER(vector)),
    halfavg, AVERAGE(vector_clean) / 2,
    vector - halfavg
  )
)
```

## _Optional argument/parameter_ {auto-animate="true"}

$$ \mathbf{y} \leftarrow \mathbf{x} - \frac{\text{mean}(\mathbf{x})}{n} $$

```{.r code-line-numbers="3|5|7|3,5,7"}
=LAMBDA(
  vector,
  [n],
  LET(
    n, IF(ISOMITTED(n), 2, n),
    vector_clean, FILTER(vector, ISNUMBER(vector)),
    halfavg, AVERAGE(vector_clean) / n,
    vector - halfavg
  )
)
```

## _Optional argument/parameter_ {auto-animate="true"}

$$ \mathbf{y} \leftarrow \mathbf{x} - \frac{\text{mean}(\mathbf{x})}{n} $$

```r
=LAMBDA(
  vector,
  [n],
  LET(
    n, IF(ISOMITTED(n), 2, n),
    vector_clean, FILTER(vector, ISNUMBER(vector)),
    halfavg, AVERAGE(vector_clean) / n,
    vector - halfavg
  )
)
```

## Penggunaan Formula

$$ \mathbf{y} \leftarrow \mathbf{x} - \frac{\text{mean}(\mathbf{x})}{n} $$

::: {.incremental}
- Formula tersebut disimpan sebagai `HALFAVG` di _Formulas Name Manager_.
- Sintaksnya `=HALFAVG(vector, [n])`.
- `=HALFAVG(D5:D10)` (maka $n=2$).
- `=HALFAVG(D5#, 4)` (maka $n=4$).
:::

## _Advanced Formula Environment_ (AFE)

::: {.incremental}
- Excel add-ins yang memudahkan mengatur formula pada lembar kerja. 
- Alternatif _Formulas Name Manager_.
- Memiliki fitur _syntax highlighting_ dan _shortcut_ umum untuk _coding_.
- Dapat _import_ UDL hasil dari orang lain. ^[Harus melalui Github Gist.]
:::

## Berbagi UDL

::: {.incremental}
- Memiliki [GitHub Account](https://github.com). 
- Mengupload kode UDL dari AFE ke [GitHub Gist](https://gist.github.com). 
- _Share_ link Gist.
:::

# Terima Kasih

Taruma Sakti Megariansyah, [hi@taruma.info](mailto:hi@taruma.info)