---
title: |
  feidlambda 0.2.0
subtitle: |
  Fitur terbaru di `feidlambda v0.2.0`
author: "Taruma Sakti Megariansyah"
abstract: |
  Pada _prerelease_ feidlambda (v0.2.0) memperkenalkan beberapa fitur untuk memanipulasi
  _dynamic array_. Berikut fitur yang ditambahkan pada `feidlambda v0.2.0`: `COMPAREVECTOR`, `MULTICHECK`, `DROPROWS`, `DROPCOLS`, `COUNTMULTICHECK`.
date: 2022-09-28

toc: true
toc-location: right
number-sections: true
number-offset: [0, 5]
link-external-newwindow: true
layout: article
---

::: {.callout-important icon="false" .text-center}
## Official GIST **feid_utils** (v0.2.0)
<https://gist.github.com/taruma/60610672a9bd94724cba46f68b5614fa><br>
[_Pre-release Page_ (GitHub)](https://github.com/fiakoenjiniring/feidlambda/releases/tag/v0.2.0){.fs-6}
:::

Berikut daftar fungsi yang tersedia di koleksi `feidlambda` versi 0.2.0:

## COMPAREVECTOR

::: {.callout-tip appearance="minimal"}
`feid_utils.`COMPAREVECTOR 
: Memeriksa apakah setiap elemen di `left_vector` memiliki nilai yang sama di isian `right_vector`. 

_return_
: _LOGICAL VECTOR_
:::

::: {.callout-caution icon="false" .text-center .font-monospace}
## _SYNTAX_
```r
=feid_utils.COMPAREVECTOR(left_vector, right_vector)
```
:::

![`feid_utils.COMPAREVECTOR`](img-0-2-0/feidlambda-v0-2-comparevector.gif)

## MULTICHECK

::: {.callout-tip appearance="minimal"}
`feid_utils.`MULTICHECK 
: Memeriksa apakah setiap kolom pada `array` memiliki nilai isian `search_vector`. Dan diproses setiap barisnya menggunakan `check_condition` yang dapat diisi dengan `"AND"` atau `"OR"`.

_return_
: _BOOLEAN VECTOR_
:::

::: {.column-margin .callout-warning}
`check_condition` diisi `"OR"` atau `"AND"`, jika tidak diisi dianggap `"AND"`.
:::

::: {.callout-caution icon="false" .text-center .font-monospace}
## _SYNTAX_
```r
=feid_utils.MULTICHECK(array, search_vector, [check_condition])
```
:::

![`feid_utils.MULTICHECK`](img-0-2-0/feidlambda-v0-2-multicheck.gif)

## DROPROWS

::: {.callout-tip appearance="minimal"}
`feid_utils.`DROPROWS 
: Menghapus baris berdasarkan `index_to_drop` dari `array`.

_return_
: _ARRAY_
:::

::: {.callout-caution icon="false" .text-center .font-monospace}
## _SYNTAX_
```r
=feid_utils.DROPROWS(array, index_to_drop)
```
:::

![`feid_utils.DROPROWS`](img-0-2-0/feidlambda-v0-2-droprows.gif)

## DROPCOLS

::: {.callout-tip appearance="minimal"}
`feid_utils.`DROPCOLS 
: Menghapus kolom berdasarkan `index_to_drop` dari `array`.

_return_
: _ARRAY_
:::

::: {.callout-caution icon="false" .text-center .font-monospace}
## _SYNTAX_
```r
=feid_utils.DROPCOLS(array, index_to_drop)
```
:::

![`feid_utils.DROPCOLS`](img-0-2-0/feidlambda-v0-2-dropcols.gif)

## COUNTMULTICHECK

::: {.callout-tip appearance="minimal"}
`feid_utils.`COUNTMULTICHECK 
: Menghitung jumlah `TRUE` dari `MULTICHECK`.

_return_
: _INTEGER_
:::
::: {.column-margin .callout-warning}
`check_condition` diisi `"OR"` atau `"AND"`, jika tidak diisi dianggap `"AND"`.
:::

::: {.callout-caution icon="false" .text-center .font-monospace}
## _SYNTAX_
```r
=feid_utils.COUNTMULTICHECK(array, search_vector, [check_condition])
```
:::

![`feid_utils.COUNTMULTICHECK`](img-0-2-0/feidlambda-v0-2-countmulticheck.gif)

