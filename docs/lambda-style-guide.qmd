---
title: |
  FSG-LAMBDA v1.0
subtitle: |
  Panduan penulisan fungsi LAMBDA di Microsoft Excel. (_LAMBDA Function Style Guide for Microsoft Excel_)
author: Taruma Sakti Megariansyah
abstract: |
  Panduan ini mencakup berbagai prinsip penulisan, desain dan praktik terbaik untuk membuat dan mengolah fungsi LAMBDA di Microsoft Excel di lingkungan FIAKO Engineering. 
abstract-title: Abstrak
date: 2023-05-19
# date-modified: 2023-01-06
lang: id

toc: true
toc-title: Daftar Isi
toc-depth: 5
toc-location: left
number-sections: false
link-external-newwindow: true
layout: article
sidebar: false
fig-responsive: true
css: docs-style.css
---

::: {.callout-note}

Panduan ini dibuat dengan bantuan chatGPT (GPT-4) dengan penyesuaian oleh penulis. 

:::

# FIAKO LAMBDA Style Guide (FSG-LAMBDA) {#sec-introduction}

**FIAKO LAMBDA Style Guide** adalah panduan penulisan fungsi LAMBDA untuk Microsoft Excel yang digunakan di FIAKO Engineering. Panduan ini dirancang untuk memberikan kerangka kerja yang konsisten dan mudah dipahami dalam mengembangkan, mengoptimalkan, dan memelihara fungsi LAMBDA yang efisien dan mudah dibaca. Panduan ini mencakup berbagai aspek, mulai dari format, konvensi penamaan, penanganan argumen, penanganan kesalahan, hingga tips keterbacaan dan kinerja fungsi LAMBDA. 

Adapun manfaat mengembangkan fungsi LAMBDA di Microsoft Excel yaitu:

- **Fleksibilitas**: Fungsi LAMBDA memungkinkan pengguna untuk membuat fungsi kustom yang dapat diadaptasi sesuai kebutuhan spesifik dan digunakan berulang kali dalam berbagai situasi.
- **Pengurangan kompleksitas**: Dengan menggunakan fungsi LAMBDA, pengguna dapat menggabungkan beberapa fungsi yang ada menjadi satu fungsi yang lebih sederhana, sehingga memudahkan pembacaan dan pemahaman fungsi yang digunakan di dalam Microsoft Excel.
- **Pemeliharaan yang lebih mudah**: Fungsi LAMBDA yang ditulis dengan baik memudahkan pemeliharaan dan pengembangan lebih lanjut, karena struktur yang jelas dan konvensi penamaan yang konsisten.
- **Penggunaan berulang**: Fungsi LAMBDA yang dibuat dapat digunakan kembali di seluruh workbook atau bahkan di workbook lain, yang meningkatkan efisiensi dalam mengembangkan solusi Excel yang canggih.
- **Kolaborasi dan berbagi**: Memudahkan pengguna untuk berbagi fungsi kustom dengan rekan kerja atau komunitas pengguna Excel, sehingga mengurangi pengulangaan pekerjaan yang sama dan meningkatkan kolaborasi. 

Panduan ini disusun untuk membantu pengguna menguasai berbagai aspek penulisan fungsi LAMBDA yang efektif.

# Prasyarat

Sebelum mulai mengembangkan fungsi LAMBDA dan menggunakan panduan ini, terdapat yang harus dipersiapkan yaitu dari perangkat yang digunakan dan pengetahuan yang dibutuhkan.

## Perangkat

Dalam mengembangkan fungsi LAMBDA dan mengikuti panduan ini berikut daftar perangkat dan _add-ins_:

- **Microsoft Excel 365**: Microsoft Excel yang digunakan **minimum** versi 365 dikarenakan fungsi LAMBDA hanya tersedia di Microsoft Excel 365.
- **Excel Labs** _add-ins_: Fitur _Advanced Formula Environment_ yang tersedia di _add-ins_ ini akan digunakan sebagai standar editor untuk pengembangan fungsi LAMBDA. Untuk instalasi dapat melihat [panduan instalasi](install.qmd).

Fungsi LAMBDA dan fungsi terbaru lainnya yang tersedia di Microsoft Excel 365, kemungkinan tersedia juga di Excel Web (OFfice Online). Sehingga, untuk mengimplementasikan fungsi LAMBDA (jika tidak berlangganan), bisa bereksperimen melalui Microsoft Excel for Web. 

# Format dan Organisasi

## Indentasi

## Pemisahan Baris

# Konvensi Penamaan

## Pentingnya Konvensi Penamaan

## Penamaan Variabel

## Penamaan Fungsi yang Deskriptif

# Keterbacaan dan Efisiensi

## Rantai Fungsi

## Fungsi Pembantu

## Tanda Kurung untuk Kejelasan

## Menjaga fungsi tetap sederhana

# Penanganan Argumen

## Urutan argumen yang konsisten

## Contoh pengaturan urutan argumen

# Penanganan Kesalahan

## Menggunakan `IFERROR` dan `IFNA`

## Cara lain untuk menangani kesalahan

# Dokumentasi

## Membuat dokumen atau lembar khusus untuk deskripsi fungsi LAMBDA

## Kiat untuk membuat deskripsi yang jelas, singkat, dan informatif

# Kinerja dan Skalabilitas

## Mengoptimalkan kinerja

## Menggunakan huruf besar dan huruf kecil yang konsisten untuk variabel

## Menguji fungsi secara menyeluruh

## Pertimbangkan skalabilitas

## Memanfaatkan fungsi bawaan

## Memanfaatkan _dynamic array_ dan fungsinya

## Menghindari referensi lingkaran atau dependensi yang tidak perlu

# Kolaborasi dan Pemeliharaan

## Berbagi fungsi LAMBDA dengan rekan kerja

## Meningkatkan fungsi secara kontinu

## Membatasi Penggunaan fungsi yang mudah berubah

## Mengimplementasikan kontrol versi

## Mengelompokkan fungsi yang terkait

## Modularisasi kode

## Menyeimbangkan kinerja dan keterbacaan

## Alat dan metode untuk mempermudah proses kolaborasi dan pemeliharaan

